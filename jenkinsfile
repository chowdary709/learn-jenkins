pipeline {
    agent {
        node {
            label 'workstation-prasad'
        }
    }

    parameters {
        // string(name: 'PERSON', defaultValue: 'hari chandra prasad', description: 'Who should I say hello to?')
        text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')
        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
        choice(name: 'CHOICE', choices: ['dev', 'prod', 'pre-prod'], description: 'Pick something')
        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }

    stages {
        stage('Example Branch Check') {
            when {
                expression {
                    return env.BRANCH_NAME == 'main'
                }
            }
            steps {
                echo 'I only execute on the main branch'
            }
        }

        stage('Build') {
            steps {
                echo 'building..'
            }
        }
        stage('Test') {
            steps {
                echo 'testing..'
            }
        }
        stage('Deploy') {
            steps {
                echo 'deploying..'
            }
        }
        stage('Dev') {
            steps {
                echo 'dev'
            }
        }


        stage('Example') {
            steps {
                script {
                    // Uncomment and define the PERSON parameter if needed
                    // echo "Hello ${params.PERSON}"
                    echo "Biography: ${params.BIOGRAPHY}"
                    echo "Toggle: ${params.TOGGLE}"
                    echo "Choice: ${params.CHOICE}"
                    echo "Password: ${params.PASSWORD}"
                }
            }
        }
    }

    post {
        always {
            echo 'I will always say Hello again!'
        }
        failure {
            echo 'I am running because your script failed'
        }
        success {
            echo 'I am running because your script succeeded'
        }
    }
}
